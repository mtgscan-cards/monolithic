version: "3.8"

services:
  mtg-db:
    build:
      context: ./postgres-docker-backend/mtg-database
    container_name: mtg-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: mtguser
      POSTGRES_PASSWORD: mtgpass
      POSTGRES_DB: mtgdb
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - backend-net

  core-api:
    container_name: core-api
    build:
      context: ./core-backend-service
    restart: unless-stopped
    depends_on:
      - mtg-db
      - redis
    env_file:
      - ./core-backend-service/.env
    volumes:
      - ./core-backend-service/resources:/app/resources
      - scryfall_data:/app/data
      - ./core-backend-service/logs:/app/logs
    ports:
      - "5000:5000" 
    networks:
      - backend-net


  descriptor-infer-service:
    build:
      context: ./inference-service
    container_name: descriptor-infer-service
    restart: unless-stopped
    depends_on:
      - mtg-db
      - redis
    env_file:
      - ./inference-service/.env
    ports:
      - "5001:5001"
    volumes:
      - ./inference-service/resources:/app/resources
      - scryfall_data:/app/data
      - ./inference-service/logs:/app/logs
    networks:
      - backend-net

  redis:
    image: redis:alpine
    container_name: mtg-redis
    restart: unless-stopped
    networks:
      - backend-net

volumes:
  pg_data:
  scryfall_data:

networks:
  backend-net:
    driver: bridge